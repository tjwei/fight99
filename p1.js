// Generated by LiveScript 1.3.1
var player, platforms, cursor, stars, startTime, score, emitters, int, WIDTH, HEIGHT, Fight99, Boot, Preloader, MainMenu, Game, x$, game, y$, z$;
emitters = [];
int = function(n){
  return n | 0;
};
WIDTH = 1280;
HEIGHT = 720;
Fight99 = {};
Fight99.Boot = Boot = (function(){
  Boot.displayName = 'Boot';
  var prototype = Boot.prototype, constructor = Boot;
  prototype.init = function(){
    var x$;
    this.game.crossOrigin = true;
    this.input.maxPointers = 1;
    this.stage.disableVisibilityChange = true;
    if (this.game.device.desktop) {
      this.scale.pageAlignHorizontally = true;
    } else {
      x$ = this.scale;
      x$.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      x$.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;
      x$.setMinMax(480, 260, WIDTH, HEIGHT);
      x$.forceLandScape = true;
      x$.pageAlignHorizontally = true;
    }
  };
  prototype.preload = function(){
    var x$, y$;
    x$ = this.load;
    y$ = bind$(x$, 'image');
    y$('background', 'images/Background-4.png');
    y$('start', 'images/start.png');
  };
  prototype.create = function(){
    this.state.start('Preloader');
  };
  function Boot(){}
  return Boot;
}());
Fight99.Preloader = Preloader = (function(){
  Preloader.displayName = 'Preloader';
  var prototype = Preloader.prototype, constructor = Preloader;
  function Preloader(game){
    this.background = null;
    this.preloadBar = null;
    this.ready = false;
  }
  prototype.preload = function(){
    var x$, y$, z$, z1$;
    x$ = this.add;
    this.background = x$.sprite(0, 0, 'background');
    this.preloadBar = x$.sprite(300, 400, 'start');
    y$ = this.load;
    y$.setPreloadSprite(this.preloadBar);
    z$ = bind$(y$, 'image');
    z$('clear', 'images/clear.png');
    z1$ = bind$(y$, 'spritesheet');
    z1$('flighter', 'images/fighter.png', 64, 64);
    z1$('ball', 'images/icon1.png', 16, 16);
  };
  prototype.update = function(){
    this.state.start('MainMenu');
  };
  return Preloader;
}());
Fight99.MainMenu = MainMenu = (function(){
  MainMenu.displayName = 'MainMenu';
  var prototype = MainMenu.prototype, constructor = MainMenu;
  function MainMenu(game){
    this.playButton = null;
  }
  prototype.create = function(){
    var x$;
    x$ = this.add;
    this.playButton = x$.button(400, 600, 'start', this.startGame, this);
  };
  prototype.update = function(){};
  prototype.startGame = function(){
    this.state.start('Game');
  };
  return MainMenu;
}());
Fight99.Game = Game = (function(){
  Game.displayName = 'Game';
  var prototype = Game.prototype, constructor = Game;
  prototype.preload = function(){
    var x$;
    x$ = this.scale;
    x$.scaleMode = Phaser.ScaleManager.SHOW_ALL;
    x$.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;
  };
  prototype.create = function(){
    var x$, y$, z$, z1$, emitterSetting, z2$, z3$, z4$, z5$, z6$;
    this.physics.startSystem(Phaser.Physics.ARCADE);
    x$ = this.add;
    y$ = x$.image(0, 0, 'background');
    y$.alpha = 0.5;
    z$ = player = x$.sprite(this.world.centerX - 32, this.world.centerY - 32, 'flighter');
    z$.frame = 3;
    this.physics.arcade.enable(z$);
    z1$ = z$.body;
    z1$.gravity.y = 0;
    z1$.collideWorldBounds = true;
    z$.animations.add('left', [9, 10, 11, 10], 10, true);
    z$.animations.add('right', [18, 19, 20, 19], 10, true);
    z$.scale.setTo(1, 1);
    score = x$.text(16, 46, '0', {
      fontSize: '32px',
      fill: '#fff'
    });
    emitterSetting = function(e, v, d){
      if (v) {
        e.width = game.world.width;
        e.setYSpeed(200 * d, 100 * d);
        e.setXSpeed(-100, 100);
      } else {
        e.setXSpeed(200 * d, 100 * d);
        e.setYSpeed(-100, 100);
        e.height = game.world.height;
      }
      e.gravity = 0;
      e.makeParticles('ball', [0, 1, 2, 3, 4, 5, 6], 200, true, false);
      e.start(false, 8000, 500);
      return emitters[emitters.length] = e;
    };
    z2$ = x$.emitter(this.world.centerX, this.world.height, 200);
    emitterSetting(z2$, true, -1);
    z3$ = x$.emitter(this.world.centerX, 0, 200);
    emitterSetting(z3$, true, 1);
    z4$ = x$.emitter(this.world.width, this.world.centerY, 200);
    emitterSetting(z4$, false, -1);
    z5$ = x$.emitter(0, this.world.centerY, 200);
    emitterSetting(z5$, false, 1);
    z6$ = this.input;
    cursor = z6$.keyboard.createCursorKeys();
    z6$.onDown.add(function(){
      this.scale.startFullScreen(false);
    }, this);
  };
  startTime = new Date();
  prototype.update = function(){
    var x$, ref$, x, y, y$, secs;
    x$ = player;
    x$.frame = 3;
    ref$ = [0, 0], x = ref$[0], y = ref$[1];
    if (cursor.left.isDown) {
      x$.frame = 1;
      x = -150;
    }
    if (cursor.right.isDown) {
      x$.frame = 5;
      x = 150;
    }
    if (cursor.up.isDown) {
      y = -150;
    }
    if (cursor.down.isDown) {
      y = 150;
    }
    y$ = x$.body.velocity;
    ref$ = [x, y], y$.x = ref$[0], y$.y = ref$[1];
    secs = ((new Date() - startTime) / 1000).toFixed(1);
    score.text = secs + "s";
  };
  function Game(){}
  return Game;
}());
x$ = game = new Phaser.Game(WIDTH, HEIGHT, Phaser.AUTO, 'gameContainer');
y$ = x$.state;
z$ = bind$(y$, 'add');
z$('Boot', Fight99.Boot);
z$('Preloader', Fight99.Preloader);
z$('MainMenu', Fight99.MainMenu);
z$('Game', Fight99.Game);
y$.start('Boot');
function bind$(obj, key, target){
  return function(){ return (target || obj)[key].apply(obj, arguments) };
}