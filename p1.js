// Generated by LiveScript 1.3.1
var player, platforms, cursor, stars, startTime, score, emitters, int, WIDTH, HEIGHT, game;
emitters = [];
int = function(n){
  return n | 0;
};
WIDTH = 1280;
HEIGHT = 720;
game = new Phaser.Game(WIDTH, HEIGHT, Phaser.AUTO, '', {
  preload: function(){
    var x$, y$, z$;
    x$ = game.load;
    x$.crossOrigin = 'anonymous';
    y$ = bind$(x$, 'image');
    y$('clear', 'images/clear.png');
    y$('start', 'images/start.png');
    y$('background', 'images/Background-4.png');
    z$ = bind$(x$, 'spritesheet');
    z$('flighter', 'images/fighter.png', 64, 64);
    z$('ball', 'images/icon1.png', 16, 16);
  },
  create: function(){
    var x$, y$, z$, z1$, z2$, emitterSetting, z3$, z4$, z5$, z6$, z7$;
    x$ = game;
    x$.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;
    x$.physics.startSystem(Phaser.Physics.ARCADE);
    y$ = x$.add;
    z$ = y$.image(0, 0, 'background');
    z$.alpha = 0.5;
    z1$ = player = y$.sprite(game.world.centerX - 32, game.world.centerY - 32, 'flighter');
    z1$.frame = 3;
    game.physics.arcade.enable(z1$);
    z2$ = z1$.body;
    z2$.gravity.y = 0;
    z2$.collideWorldBounds = true;
    z1$.animations.add('left', [9, 10, 11, 10], 10, true);
    z1$.animations.add('right', [18, 19, 20, 19], 10, true);
    z1$.scale.setTo(1, 1);
    score = y$.text(16, 46, '0', {
      fontSize: '32px',
      fill: '#fff'
    });
    emitterSetting = function(e, v, d){
      if (v) {
        e.width = game.world.width;
        e.setYSpeed(200 * d, 100 * d);
        e.setXSpeed(-100, 100);
      } else {
        e.setXSpeed(200 * d, 100 * d);
        e.setYSpeed(-100, 100);
        e.height = game.world.height;
      }
      e.gravity = 0;
      e.makeParticles('ball', [0, 1, 2, 3, 4, 5, 6], 200, true, false);
      e.start(false, 8000, 500);
      return emitters[emitters.length] = e;
    };
    z3$ = y$.emitter(game.world.centerX, game.world.height, 200);
    emitterSetting(z3$, true, -1);
    z4$ = y$.emitter(game.world.centerX, 0, 200);
    emitterSetting(z4$, true, 1);
    z5$ = y$.emitter(game.world.width, game.world.centerY, 200);
    emitterSetting(z5$, false, -1);
    z6$ = y$.emitter(0, game.world.centerY, 200);
    emitterSetting(z6$, false, 1);
    z7$ = x$.input;
    cursor = z7$.keyboard.createCursorKeys();
    z7$.onDown.add(function(){
      game.scale.startFullScreen(false);
    }, this);
    startTime = new Date();
  },
  update: function(){
    var x$, ref$, x, y, y$, secs;
    x$ = player;
    x$.frame = 3;
    ref$ = [0, 0], x = ref$[0], y = ref$[1];
    if (cursor.left.isDown) {
      x$.frame = 1;
      x = -150;
    }
    if (cursor.right.isDown) {
      x$.frame = 5;
      x = 150;
    }
    if (cursor.up.isDown) {
      y = -150;
    }
    if (cursor.down.isDown) {
      y = 150;
    }
    y$ = x$.body.velocity;
    ref$ = [x, y], y$.x = ref$[0], y$.y = ref$[1];
    secs = ((new Date() - startTime) / 1000).toFixed(1);
    score.text = secs + "s";
  }
});
function bind$(obj, key, target){
  return function(){ return (target || obj)[key].apply(obj, arguments) };
}